//$devio-width:;
//清除浮动
.clerfix {
    &:after {
        content: '';
        height: 0;
        width: 0;
        display: block;
        font-size: 0;
        overflow: hidden;
        visibility: hidden;
        clear: both;
    }
}

// 移动端1px 线框
@mixin border-1px(){
    position: relative;
    &:after {
        display: block;
        position: absolute;
        left: 0;
        bottom: 0;
        width: 100%;
        border-bottom: 1px solid rgb(0, 0, 0);
        content: '';
    }
    
    @media (-webkit-min-device-pixel-ratio: 1.5),
    (min-device-pixel-ratio:1.5) {
        .border-1px::after {
            -webkit-transform: scaleY(0.7);
            transform: scaleY(0.7)
        }
    }
    
    @media (-webkit-min-device-pixel-ratio: 2),
    (min-device-pixel-ratio:2) {
        .border-1px::after {
            -webkit-transform: scaleY(0.5);
            transform: scaleY(0.5)
        }
    }
}


//按钮
@mixin btn($y, $x) {
    display: inline-block;
    padding: $y $x;
    border-radius: 3px;
    font-size: 13px;
    color: #fff;
    span {
        padding: 0 3px;
    }
}

//inline-block  兼容
@mixin dib() {
    display: inline-block;
    *display: inline;
    *zoom: 1;
}

//文本超出部分隐藏
@mixin ell() {
    overflow: hidden;
    -ms-text-overflow: ellipsis;
    text-overflow: ellipsis;
    white-space: nowrap;
}

//背景图
@mixin bg-img($name, $tier) {
    @if $tier==1 {
        background: url("../../static/img/"+$name + ".png") no-repeat;
    }
    @else if($tier==2) {
        background: url("../../../static/img/"+$name + ".png") no-repeat;
    }
    @else {
        background: url("../../../../static/img/"+$name + ".png") no-repeat;
    }
    background-size: 100% 100%;
}

//背景图平铺
@mixin repeat-img($name,
$tier) {
    @if $tier==1 {
        background: url("../../static/img/"+$name + ".png");
    }
    @else if($tier==2) {
        background: url("../../../static/img/"+$name + ".png");
    }
    @else {
        background: url("../../../../static/img/"+$name + ".png");
    }
}

//默认边框
@mixin borders($border-color,
$border-height) {
    border: 1px solid $border-color;
    border-top: 0;
    border-right: 0;
    position: relative;
    &:before {
        content: '';
        display: block;
        width: 1px;
        height: $border-height;
        background: $border-color;
        position: absolute;
        right: -1px;
        top: 0;
    }
}

//头部导航渐变
@mixin nav-linner($color,
$tocolor,
$str,
$tostr) {
    background: $color;
    background: -moz-linear-gradient(top, $color 0%, $tocolor 100%);
    background: -webkit-linear-gradient(top, $color 0%, $tocolor 100%);
    background: linear-gradient(to bottom, $color 0%, $tocolor 100%);
    filter: progid: DXImageTransform.Microsoft.gradient( startColorstr=$str, endColorstr=$tostr, GradientType=0);
}

//渐变线
@mixin line-linner($color,
$tocolor,
$str,
$tostr) {
    background: $color;
    background: -moz-linear-gradient(left, $color 0%, $tocolor 50%, $color 100%);
    background: -webkit-linear-gradient(left, $color 0%, $tocolor 50%, $color 100%);
    background: linear-gradient(to right, $color 0%, $tocolor 50%, $color 100%);
    filter: progid: DXImageTransform.Microsoft.gradient( startColorstr=$str, endColorstr=$tostr, GradientType=1);
}

//滚动条      argments; 1:宽度    2:高度    3:背景颜色    4:滑块颜色
@mixin scroller($width,
$height,
$bg-color,
$color) {
    &::-webkit-scrollbar {
        width: $width;
        height: $height;
        background-color: $color;
    }
    &::-webkit-scrollbar-track {
        -webkit-box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.3);
        border-radius: 10px;
        background-color: $bg-color;
    }
    &::-webkit-scrollbar-thumb {
        border-radius: 10px;
        -webkit-box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.5);
        background-color: $color;
    }
}

//input  placeholder
@mixin placeholder($color) {
    &::-webkit-input-placeholder,
    &::-webkit-input-placeholder {
        color: $color;
    }
    &:-moz-placeholder,
    &:-moz-placeholder {
        color: $color;
    }
    &::-moz-placeholder,
    &::-moz-placeholder {
        color: $color;
    }
    &:-ms-input-placeholder,
    &:-ms-input-placeholder {
        color: $color;
    }
}

// 四边形切角
@mixin css-triangle ($direction: "down", $size: 20px, $color: #000, $fillColor:#fff) {
    width: 0; 
    height: 0;
    position: relative;
    z-index: 0;
    border-left: #{setTriangleSize($direction, "left", $size)} solid #{setTriangleColor($direction, "left", $color)};
    border-right: #{setTriangleSize($direction, "right", $size)} solid #{setTriangleColor($direction, "right", $color)};
    border-bottom: #{setTriangleSize($direction, "bottom", $size)} solid #{setTriangleColor($direction, "bottom", $color)};
    border-top: #{setTriangleSize($direction, "top", $size)} solid #{setTriangleColor($direction, "top", $color)};

    .#{$namespace}triangle-fill{
        width: 0; 
        height: 0;
        position: absolute;
        left: -($size/2-1);
        top:-($size);
        z-index: 1;
        border-left: #{setTriangleSize($direction, "left", $size)} solid #{setTriangleColor($direction, "left", $fillColor)};
        border-right: #{setTriangleSize($direction, "right", $size)} solid #{setTriangleColor($direction, "right", $fillColor)};
        border-bottom: #{setTriangleSize($direction, "bottom", $size)} solid #{setTriangleColor($direction, "bottom", $fillColor)};
        border-top: #{setTriangleSize($direction, "top", $size)} solid #{setTriangleColor($direction, "top", $fillColor)};
    }
}
@function setTriangleColor($direction, $side, $color) {

    @if $direction == "left" and $side == "right" 
    or  $direction == "right" and $side == "left" 
    or $direction == "down" and $side == "top" 
    or $direction == "up" and $side == "bottom" {
        @return $color
    } @else {
        @return "transparent";
    }
}
@function setTriangleSize($direction, $side, $size){
    @if (($direction == "left" or $direction == "right") and ($side=="left" or $side=="right"))
        or (($direction == "up" or $direction == "down") and ($side=="top" or $side=="bottom")){
        @return $size/2;
    } @else{
        @return $size;
    }
}

@function setTriangleOffset($direction, $side, $size){
    @if (($direction == "left" or $direction == "right") and ($side=="left" or $side=="right"))
        or (($direction == "up" or $direction == "down") and ($side=="top" or $side=="bottom")){
        @return $size/2;
    } @else{
        @return $size;
    }
}


//不可点击元素1像素边框
@mixin border1px($bc:#000, $side: all, $br: 0, $bs: solid) {
    position: relative;
    &:after {
        position: absolute;
        content: "";
        top: 0;
        left: 0;
        box-sizing: border-box;
        width: 100%;
        height: 100%;
        @if $side==all {
            border: 1px $bs $bc;
        }
        @else {
            $size: length($side);
            @for $i from 1 through $size {
                border-#{nth($side, $i)}: 1px $bs $bc;
            }
        }
        point-events:none;
    }
    @media (min--moz-device-pixel-ratio: 1.5),
    (-webkit-min-device-pixel-ratio: 1.5),
    (min-device-pixel-ratio: 1.5),
    (min-resolution: 144dpi),
    (min-resolution: 1.5dppx),
    (-ms-high-contrast:active),
    (-ms-high-contrast:none) {
        &:after {
            width: 200%;
            height: 200%;
            transform: scale(.5);
            transform-origin: 0 0;
            border-radius: #{$br*2}px;
        }
    }
    @media (-webkit-device-pixel-ratio: 1.5) {
        // 解决1.5屏幕下某些边框不显式问题，小数位多写几位
        &:after {
            width: 150%;
            height: 150%;
            transform: scale(.6666);
            transform-origin: 0 0;
            border-radius: #{$br*1.5}px;
        }
    }
    @media (-webkit-device-pixel-ratio: 3) {
        &:after {
            width: 300%;
            height: 300%;
            transform: scale(.3333);
            transform-origin: 0 0;
            border-radius: #{$br*3}px;
        }
    }
}

//可点击元素1像素边框
@mixin border-1px($bc:#000, $side: all){
      position: relative;
    &:after {
        position: absolute;
        content: "";
        box-sizing: border-box;
        background: $bc;
        @if $side == left{
            left: 0;
            top: 0;
            height: 100%;
            width: 1px;
            transform: scaleX(0.5);
        }@else if $side == right{
            right: 0;
            top: 0;
            height: 100%;
            width: 1px;
            transform: scaleX(0.5);
        }@else if $side == top{
            right: 0;
            top: 0;
            height:1px;
            width: 100%;
            transform: scaleY(0.5);
        }@else{
            right: 0;
            bottom: 0;
            height:1px;
            width: 100%;
            transform: scaleY(0.5);
        }
    }
}


//input placehoder默认颜色
input::-webkit-input-placeholder,
textarea::-webkit-input-placeholder{
    color: $assistFontColor;
}
input:-moz-placeholder,
textarea:-moz-placeholder {
    color: $assistFontColor;
}
input::-moz-placeholder, 
textarea::-moz-placeholder {
    color: $assistFontColor;
}
input:-ms-input-placeholder,
textarea:-ms-input-placeholder {
    color: $assistFontColor;
}

//css画三角形
@mixin arrow($direction,
$size,
$color) {
    width: 0;
    height: 0;
    line-height: 0;
    font-size: 0;
    overflow: hidden;
    border-width: $size;
    cursor: pointer;
    @if $direction == top {
        border-style: dashed dashed solid dashed;
        border-color: transparent transparent $color transparent;
        border-top: none;
    }
    @else if $direction == bottom {
        border-style: solid dashed dashed dashed;
        border-color: $color transparent transparent transparent;
        border-bottom: none;
    }
    @else if $direction == right {
        border-style: dashed dashed dashed solid;
        border-color: transparent transparent transparent $color;
        border-right: none;
    }
    @else if $direction == left {
        border-style: dashed solid dashed dashed;
        border-color: transparent $color transparent transparent;
        border-left: none;
    }
}


